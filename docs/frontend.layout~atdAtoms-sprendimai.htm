<!doctype html>
<html lang="lt"><!-- #BeginTemplate "/Templates/konspekto.dwt" --><!-- DW6 -->
<head>
<!-- #BeginEditable "doctitle" -->
<title>-</title>
<!-- #EndEditable -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
  
<meta name="author" content="Žydrūnas Martinkus">
<meta name="description" content="Mano web-dev konspektas">
<meta name="keywords" content="HTML, CSS, JavaScript">
  
<link rel="preload" as="style" href="assets/sass/master.css">
<!--<link rel="stylesheet" href="../assets/node_modules/normalize.css/normalize.css">-->
<link rel="stylesheet " href="assets/sass/master.css"> <!-- taip — rel="stylesheet " — DW nepakrauna-nepritaiko CSS failo, o naršyklės pritaiko -->
<link rel="stylesheet" href="assets/sass/master.utilities.css">
<link rel="stylesheet" href="assets/sass/master.dev.css">
  
<link rel="stylesheet" href="assets/sass/master-dreamweaver.css">
<link rel="stylesheet" href="assets/sass/dreamweaver-design-time.css">
<script>
// kad naršyklėje neveiktų CSS failai skirti darbui dreamweaver'yje
document.querySelectorAll("link[href$='dreamweaver-design-time.css'], link[href$='master-dreamweaver.css']").forEach(function(elem) {
  // document.querySelectorAll("link[href$='dreamweaver-design-time.css']").forEach(function(elem) {
  // elem.setAttribute("disabled", true); // neveikia ant Firefox'o
  elem.parentNode.removeChild(elem);
});
</script>
  
<script src="assets/node_modules/jquery/dist/jquery.min.js"></script>
<!--<script data-main="assets/js/master.requirejs" src="../assets/js.vendor/requirejs/require.js"></script>-->
<script type="module" src="assets/js/master.js"></script>
<!-- #BeginEditable "head" -->
<style>
  .pvs {
    --clr1:        hsl(227, 75%, 16%);
    --clr1-1:      hsla(227, 75%, 16%, .2);
    --clr2:        hsl(230, 100%, 49%);
    --clr2L-1:     hsla(230, 100%, 49%, .5);
    --clr3:        hsl(274, 94%, 50%);
    --clr3L-1:     hsla(274, 94%, 50%, .5);

    --clr4:        hsl(60, 100%, 51%);
    --clr4L1:      hsla(60, 100%, 51%, .8);
    --clr4D1:      hsla(60, 100%, 30%, .8);

    --clr5:        hsl(227, 62%, 90%);
    --fixedHeight: 90px;
    --fluidHeight: 10vh;
    /*outline: 2px dotted lightseagreen;*/
    /*outline-offset: .2em;*/
  }
  .pvs--fixed .c-pvs__parent {
    height: var(--fixedHeight);
  }
  /*.pvs--text .c-pvs__parent * {*/
  /*  display: inline;*/
  /*}*/
  .pvs .c-pvs__parent {
    /*background: var(--clr2L-1);*/
    background: cornflowerblue;
  }
  .pvs .c-pvs__parent > * {
    background: var(--clr4L1);
    /*border: var(--clr4D1) 1px solid;*/
    padding: .3em .8em;
  }
</style>
<!-- #EndEditable -->
</head>
<body>
<div class="c-sidePanel c-sidePanel--left">
  <nav class="c-navTree">
    <ul>
      <li><a href="index_.html">pradžia </a></li>
    </ul>
  </nav>
  <!--<hr>-->
  <nav class="c-sidePanel__toc c-navTree c-navTree--numbered" aria-label="page table of content">
    <ul id="page-toc"></ul>
  </nav>
</div>  
<!-- #BeginEditable "body" -->

<h1>Layout sprendimai — atomic design: atoms</h1>
<p><a href="https://1linelayouts.glitch.me/">1-Line Layouts</a></p>

<h2>Centravimas  horizontaliai ir vertikaliai / vertical and horizontal centering, centering along x-axis and y-axis</h2>
<ul>
  <li><a href="https://moderncss.dev/complete-guide-to-centering-in-css/#vertically-and-horizontally-xy">The Complete Guide to Centering in CSS | Modern CSS Solutions</a></li>
  <li><strong>Pasidėti:</strong> 2018 goalkicker -- CSS Notes for Professionals.pdf &gt;&gt;&gt; Chapter 6: Centering</li>
</ul>
<blockquote>
  <ul>
    <li><strong>Inline elements</strong> (and <em>only</em> inline elements) can be vertically aligned in their context via vertical-align: middle. However, the "context" isn't the whole parent container height, it's the height of the text line they're in. <a href="http://jsfiddle.net/jBthq/" rel="noreferrer">jsfiddle example</a></li>
    <li>For block elements, vertical alignment is harder and strongly depends on the specific situation:
      <ul>
        <li>If the inner element can have a <strong>fixed height</strong>, you can make its position absolute and specify its height, margin-top and top position. <a href="http://jsfiddle.net/YFncP/2/" rel="noreferrer">jsfiddle example</a></li>
        <li>If the centered element <strong>consists of a single line</strong> <em>and</em> <strong>its parent height is fixed</strong> you can simply set the container's line-height to fill its height. This method is quite versatile in my experience. <a href="http://jsfiddle.net/d4zGF/" rel="noreferrer">jsfiddle example</a></li>
        <li>… there are more such special cases.</li>
      </ul>
    </li>
  </ul>
  <p> <a href="">html - How to Vertical align elements in a div? - Stack Overflow</a></p>
</blockquote>
<p>Reikšmės:</p>
<ul>
  <li>Parent — pozicionavimo bazė
    <ul>
      <li><b>Block</b> — <code>display: block</code></li>
      <li><b>Flexbox</b> — <code>display: flex</code></li>
      <li><b>Grid</b> — <code>display: grid</code></li>
    </ul>
  </li>
  <li>Child — pozicionavimo subjektas
    <ul>
      <li><b>Inline</b> — Text node arba Inline element
        <ul>
          <li><b>Inline-element</b> — Inline element — <code>display: inline</code></li>
          <li><b>Text</b> — Text node</li>
        </ul>
      </li>
      <li><b>Block</b> — block element — <code>display: block</code></li>
      <li><b>Block–Inline</b> — Inline
        arba Block</li>
    </ul>
  </li>
</ul>
<table width="1876" class="c-table-linesGrid s-c-pvs-hover">
  <caption>
  Centravimas horizontaliai ir vertikaliai vieno Inline arba Block elemento
  </caption>
  <tr>
    <th width="5%">Parent ↓</th>
    <th width="20%"> Centravimas horizontaliai ir vertikaliai</th>
    <th width="20%">Centravimas horizontaliai </th>
    <th width="20%">Centravimas vertikaliai </th>
    <th width="20%">&nbsp;</th>
  </tr>
  <tr>
    <th>table-cell</th>
    <td>
      <p>&nbsp;</p>
      <p> <a href="https://css-tricks.com/centering-the-newest-coolest-way-vs-the-oldest-coolest-way/">Centering: The Newest Coolest Way vs. The Oldest Coolest Way | CSS-Tricks</a></p>
      <pre><code>html, body {
  margin: 0;
  height: 100%;
}
body {
  display: table;
  width: 100%;
}
body &gt; span {
  display: table-cell;
  vertical-align: middle;
  text-align: center;
}

&lt;body&gt;
  &lt;span&gt;
    Centered vertically and horizontally.
  &lt;/span&gt;
&lt;/body&gt;</code></pre>
      <p>&nbsp;</p>
    </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <th>Block</th>
    <td>
      <div class="c-pvs c-pvs--title c-pvs--border pvs -pvs--fixed">
        <p>child: Inline</p>
        <pre><code>.parent {
  text-align: center
  line-height: &lt;konteinerio-aukštis&gt;
}</code></pre>
        <!--        <p>Centravimas vertikaliai <code>height:</code> ir <code>line-height:</code> nustačius tą pačią reikšmę</p>-->
        <p class="c-em-alert c-em--small">Trūkumas — tvarkingai veikia tik kai visas tekstas sutelpa į vieną eilutę.        </p>
        <div class="c-pvs__parent" style="text-align: center; line-height: var(--fixedHeight)"> <span contenteditable style="">koks tai tekstas koks tai tekstas</span> </div>
      </div>
      <p>&nbsp;</p>
      <div class="c-pvs c-pvs--title c-pvs--border pvs pvs--fixed">
        <p>child: Block</p>
        <pre><code>.parent {
  position: relative
}
.child {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}</code></pre>
        <p>Trūkumai:</p>
        <blockquote>
          <p>Gotchas</p>
          <p>Because we've used absolute posoitioning, there's a chance the content will grow to overflow the parent, even if like in the demo the parent has a min-width which typically grows with the content <em>except</em> for absolute children.</p>
          <p>The fix for this is: use grid or flexbox :) Or prepare to create #allthemediaqueries.</p>
        </blockquote>
        <div class="c-pvs__parent" style="position: relative">
          <div contenteditable style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%)">koks tai tekstas</div>
        </div>
      </div>
      <p>&nbsp;</p>
      <div class="c-pvs c-pvs--title c-pvs--border pvs pvs--fixed">
        <p>child: Block</p>
        <pre><code>.child {
  position: relative;
  width: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}</code></pre>
        <div class="c-pvs__parent" style="">
          <div contenteditable style="position: relative; width: 50%; top: 50%; left: 50%; transform: translate(-50%, -50%)">koks tai tekstas</div>
        </div>
        <p>Jeigu bliūrina tekstą: </p>
        <blockquote>
          <p><a href="https://stackoverflow.com/a/26356771/1501938" target="_blank" font-size="2,2,3,3" color="link">Some developers have reported</a> that this approach can cause the children to become blurry due to the element being placed on a "half pixel". A solution for this is to set the perspective of the element:</p>
          <pre><code>.child {
  // ...
  transform: perspective(1px) translateY(-50%);
}</code></pre>
        </blockquote>
        <div class="c-pvs__parent" style="">
          <div contenteditable style="position: relative; width: 50%; top: 50%; left: 50%; transform: perspective(1px) translate(-50%, -50%)">koks tai tekstas</div>
        </div>
      </div>
    </td>
    <td>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
    </td>
    <td>
      <div class="c-pvs c-pvs--title c-pvs--border pvs pvs--fixed">
        <p>child: block</p>
        <p><a href="https://www.sitepoint.com/premium/books/modern-css/read/1">Modern CSS - Reader</a></p>
        <pre><code>.parent {
  position: relative
}
.child {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}</code></pre>
        <p>Trūkumai:</p>
        <blockquote>
          <p>&nbsp;</p>
        </blockquote>
        <div class="c-pvs__parent" style="position: relative">
          <div contenteditable style="position: relative; top: 50%; transform: translateY(-50%)">koks tai tekstas</div>
        </div>
      </div>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
    </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <th>Flexbox</th>
    <td>
      <div class="c-pvs c-pvs--title c-pvs--border pvs pvs--fixed">
        <p>Standartinis centravimas flexbox'u</p>
        <pre><code>.parent {
  display: flex;
  align-items: center;
  justify-content: center;
}</code></pre>
        <p>Text:</p>
        <div class="c-pvs__parent" style="display: flex; align-items: center; justify-content: center">koks tai tekstas</div>
        <p>Inline-element:</p>
        <div class="c-pvs__parent" style="display: flex; align-items: center; justify-content: center"> <span contenteditable style="">koks tai tekstas</span></div>
        <p>Block:</p>
        <div class="c-pvs__parent" style="display: flex; align-items: center; justify-content: center">
          <div contenteditable style="">koks tai tekstas</div>
        </div>
      </div>
      <p>&nbsp;</p>
      <div class="c-pvs c-pvs--title c-pvs--border pvs pvs--fixed">
        <p>Alternative Flexbox Solution</p>
        <pre><code>.parent {
  display: flex
}
.child {
  margin: auto;
}</code></pre>
        <div class="c-pvs__parent" style="display: flex">
          <div contenteditable style="margin: auto">koks tai tekstas</div>
        </div>
      </div>
    </td>
    <td>
      <p>&nbsp;</p>
    </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <th>Grid</th>
    <td>
      <p>&nbsp;</p>
      <p> <a href="https://css-tricks.com/centering-the-newest-coolest-way-vs-the-oldest-coolest-way/">Centering: The Newest Coolest Way vs. The Oldest Coolest Way | CSS-Tricks</a></p>
      <blockquote>
        <p>This is so cutting edge, in fact, that Microsoft Edge, which supports CSS grid, doesn't support place-items yet. You'd have to use align-items: center; and justify-content: center; instead.</p>
      </blockquote>
      <pre><code>body {
  display: grid;
  height: 100vh;
  margin: 0;
  place-items: center center;
}</code></pre>
      <p>&nbsp;</p>
      <div class="c-pvs c-pvs--title c-pvs--border pvs pvs--fixed">
        <p>Standartinis centravimas grid'u</p>
        <pre><code>.parent {
  display: grid;
  place-content: center;
}</code></pre>
        <p>Text:</p>
        <div class="c-pvs__parent" style="display: grid; place-content: center">koks tai tekstas</div>
        <p>Inline-element:</p>
        <div class="c-pvs__parent" style="display: grid; place-content: center"><span contenteditable style="">koks tai tekstas</span></div>
        <p>Block:</p>
        <div class="c-pvs__parent" style="display: grid; place-content: center">
          <div contenteditable style="">koks tai tekstas</div>
        </div>
      </div>
      <p>&nbsp;</p>
    </td>
    <td>
      <p>&nbsp;</p>
    </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
</table>
<h2>... / equal width columns</h2>
<p> <a href="https://twitter.com/wesbos/status/1256229763225657348">(20) Wes Bos on Twitter: "🔥 A visual guide to getting equal width columns in CSS Grid https://t.co/PY4yYokY18" / Twitter</a></p>
<p><img src="images/EW8GM-YXkAA8GgJ.jpg" alt=""/></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<table width="1875" class="c-tableCols c-tableCols--h3h4 u-table-equelCols">
  <tr>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">&nbsp;</td>
  </tr>
</table>
<p>&nbsp;</p>
<table width="1875" class="c-tableCols c-tableCols--h3h4 u-table-equelCols">
  <tr>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">&nbsp;</td>
  </tr>
</table>
<p>&nbsp;</p>
<table width="1875" class="c-tableCols c-tableCols--h3h4 u-table-equelCols">
  <tr>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">
      <p>&nbsp;</p>
    </td>
    <td width="20%">&nbsp;</td>
  </tr>
</table>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>

<!--<table width="1883" class="c-tableCols c-tableCols&#45;&#45;h3h4 u-table-equelCols">-->
<!--  <tr>-->
<!--    <td width="25%">&nbsp;</td>-->
<!--    <td width="25%">&nbsp;</td>-->
<!--    <td width="25%">&nbsp;</td>-->
<!--    <td width="25%">&nbsp;</td>-->
<!--  </tr>-->
<!--</table>-->

<!-- #EndEditable -->
</body>
<!-- #EndTemplate --></html>
