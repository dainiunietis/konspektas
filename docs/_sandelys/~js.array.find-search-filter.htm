<!doctype html>
<html lang="lt">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title></title>
  <link rel="stylesheet" href="assets/sass/master.css">
  <link rel="stylesheet" href="assets/sass/master.utilities.css">
  <link rel="stylesheet" href="assets/sass/master.dev.css">
  <style>
    /*body {
      font: 1.2em "IBM Plex Sans", sans-serif;
      margin: 1em;
    }*/
  </style>
  <script>
    // Don't use console.log(obj);,
    // use console.log(JSON.parse(JSON.stringify(obj)));.
    // This way you are sure you are seeing the value of obj at the moment you log it.

    // const pvzRootElm = btnElm.parentElement
    // console.log('pvzRootElm =', pvzRootElm)

    document.addEventListener("DOMContentLoaded",
    //   function(){
    //   console.log("DOM pasikrovė");
    // }

    // () => alert("Hello!")
    );
    // console.log('c%masyve palikti tik lyginius skaičius', 'background: deepskyblue')
  </script>
</head>
<body>
<!-- kad darytų TOC-turinį -->
<!--<script src="assets/bower_components/jquery/dist/jquery.min.js"></script>
<script data-main="assets/js/loader" src="assets/js.vendor/requirejs/require.js"></script>
<script type="module" src="assets/js/master-imports.esmodule.js"></script>
<div class="c-controlPanel c-controlPanel&#45;&#45;left c-controlPanel&#45;&#45;links">
  <ul>
    <li><a href="index_.html" target="_top">pradžia</a></li>
  </ul>
</div>
<div id="Lay-ControlPanel-Toc" class="c-controlPanel c-controlPanel&#45;&#45;left c-controlPanel&#45;&#45;toc">
  <ul id="Lay-ControlPanel-Toc2"></ul>
</div>-->

<h1>JavaScript Arrays: Find, Search, and Filter</h1>

<p>
  <a href="https://blog.bitsrc.io/8-methods-to-search-javascript-arrays-fadbce8bea51">8 Methods to Find, Search, and Filter JavaScript Arrays | by Joel Thoms | Sep, 2020 | Bits and Pieces</a>
</p>

<p><strong>Paspaudus button'ą išvedimas daromas DevTool'sų console'ėje.</strong></p>

<div class="o-mcl o-mcl--W2 -o-mcl--N4">
  <h3>Array.filter() — masyvo filtravimas su predicate funkcija</h3>

  <p>Kiekvienas masyvo elemnetas patikrinamas metodui <code>.filter</code> perduota funkcija — jei įvykdžius su jai perduotu masyvo elementu grąžina <code>true</code> — tas elementas lieka grąžinamame masyve, pvz.:</p>
  <pre><code>const input = [1, 2, 3]
const predicate = ArrElm => ArrElm > 1
const output = input.filter(predicate) // [2, 3]</code></pre>

  <div class="o-mcl__continuous c-pvs c-pvs--border">
    <button onclick="pvz_20200908004052(this)">masyve palikti tik lyginius skaičius</button>
    <button onclick="pvz_20200908175524(this)">masyve palikti tik didesnius už 3 skaičius</button>
    <script>
      function pvz_20200908004052(btnElm) {
        const pvzTitle = btnElm.innerHTML
        console.group(pvzTitle)

        const input = [1, 2, 3, 4, 5]
        console.log('input =', input)

        const isEven = number => number % 2 === 0
        const output = input.filter(isEven)
        console.log('output =', output)

        console.groupEnd()
      }
      function pvz_20200908175524(btnElm) {
        const pvzTitle = btnElm.innerHTML
        console.group(pvzTitle)

        const input = [1, 2, 3, 4, 5]
        console.log('input =', input)

        const predicate = number => number > 3
        const output = input.filter(predicate)
        console.log('output =', output)

        console.groupEnd()
      }
    </script>
  </div>
</div>


<div class="o-mcl o-mcl--W2 -o-mcl--N4">
  <div class="o-mcl__continuous">
  </div>
</div>

<!--<div class="o-gfx o-gfx&#45;&#45;W1 o-gfx&#45;&#45;boxed">
  <div>
    <h3>Array.filter() — masyvo filtravimas su predicate funkcija</h3>
    <p>
      <button onclick="ex_20200908004052()">masyve palikti tik lyginius skaičius</button>
      <script>
        // Don't use console.log(obj);,
        // use console.log(JSON.parse(JSON.stringify(obj)));.
        // This way you are sure you are seeing the value of obj at the moment you log it.
        function ex_20200908004052() {
          // console.log('c%masyve palikti tik lyginius skaičius', 'background: deepskyblue')
          console.group('masyve palikti tik lyginius skaičius')

          const input = [1, 2, 3, 4, 5]
          console.log('input =', input)

          const isEven = number => number % 2 === 0

          const output = input.filter(isEven)
          console.log('output =', output)

          console.groupEnd()
        }
      </script>
    </p>
  </div>
</div>-->


<!--
<div class="o-mcl o-mcl&#45;&#45;W2 -o-mcl&#45;&#45;N4">
  <h3>Array.filter() — masyvo filtravimas su predicate funkcija</h3>
  <p>
    <button onclick="ex_20200908004052()">masyve palikti tik lyginius skaičius</button>
    <script>
      // Don't use console.log(obj);,
      // use console.log(JSON.parse(JSON.stringify(obj)));.
      // This way you are sure you are seeing the value of obj at the moment you log it.
      function ex_20200908004052() {
        const input = [1, 2, 3, 4, 5]
        console.log('input =', input)

        const isEven = number => number % 2 === 0

        const output = input.filter(isEven)
        console.log('output =', output)
      }
    </script>
  </p>
</div>
-->


<p style="height: 1000vh">&nbsp;</p>
</body>
</html>
